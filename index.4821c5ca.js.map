{"mappings":"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","sources":["src/data.js","src/index.js"],"sourcesContent":["let notesData = [\n  {\n    time: new Date('2023-07-30T10:00:00'),\n    content: 'Buy groceries',\n    category: 'Task',\n    datesMentioned: ['2023-07-31'],\n  },\n  {\n    time: new Date('2023-07-29T15:30:00'),\n    content: \"What's the meaning of life?\",\n    category: 'Random Thought',\n    datesMentioned: [],\n  },\n  {\n    time: new Date('2023-07-30T10:00:00'),\n    content: 'Learn JS',\n    category: 'Task',\n    datesMentioned: ['2023-07-31'],\n  },\n  {\n    time: new Date('2023-07-29T15:30:00'),\n    content: 'Work in Radency',\n    category: 'Idea',\n    datesMentioned: [],\n  },\n  {\n    time: new Date('2023-07-30T10:00:00'),\n    content: 'Learn React',\n    category: 'Task',\n    datesMentioned: ['2023-07-31'],\n  },\n  {\n    time: new Date('2023-07-29T15:30:00'),\n    content: 'How start internship in Radency',\n    category: 'Random Thought',\n    datesMentioned: [],\n  },\n  {\n    time: new Date('2023-07-29T15:30:00'),\n    content: 'Start new life',\n    category: 'Idea',\n    datesMentioned: [],\n  },\n];\n\nexport { notesData };\n","import { notesData } from './data';\n\nconst datePattern = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/g;\n\nconst categoryInput = document.getElementById('category');\nconst contentInput = document.getElementById('content');\nconst addNoteBtn = document.getElementById('addNoteBtn');\nconst notesTableBody = document.querySelector('#notesTable tbody');\nconst taskActiveCount = document.getElementById('taskActiveCount');\nconst taskArchivedCount = document.getElementById('taskArchivedCount');\nconst randomThoughtActiveCount = document.getElementById(\n  'randomThoughtActiveCount'\n);\nconst randomThoughtArchivedCount = document.getElementById(\n  'randomThoughtArchivedCount'\n);\nconst ideaActiveCount = document.getElementById('ideaActiveCount');\nconst ideaArchivedCount = document.getElementById('ideaArchivedCount');\n\nfunction findDatesMentioned(content) {\n  return content.match(datePattern) || [];\n}\n\n// Рендер таблиці\nfunction renderNotesTable() {\n  notesTableBody.innerHTML = '';\n\n  for (const note of notesData) {\n    const tr = document.createElement('tr');\n    tr.innerHTML = `\n      <td>${note.time.toLocaleString()}</td>\n      <td>${note.content}</td>\n      <td>${note.category}</td>\n      <td>${note.datesMentioned.join(', ')}</td>\n      <td>\n        ${\n          note.archived\n            ? `<button data-index=\"${notesData.indexOf(\n                note\n              )}\" class=\"unarchiveBtn\">Unarchive</button>`\n            : `<button data-index=\"${notesData.indexOf(\n                note\n              )}\" class=\"archiveBtn\">Archive</button>`\n        }\n        <button data-index=\"${notesData.indexOf(\n          note\n        )}\" class=\"editBtn\">Edit</button>\n        <button data-index=\"${notesData.indexOf(\n          note\n        )}\" class=\"deleteBtn\">Delete</button>\n      </td>\n    `;\n    notesTableBody.appendChild(tr);\n  }\n}\n\n// Додавання нотатків\nfunction handleAddNote() {\n  const category = categoryInput.value;\n  const content = contentInput.value;\n  if (content.trim() === '') {\n    alert('Please enter note content.');\n    return;\n  }\n\n  const newNote = {\n    time: new Date(),\n    content: content,\n    category: category,\n    datesMentioned: findDatesMentioned(content),\n  };\n\n  notesData.push(newNote);\n  renderNotesTable();\n  updateSummaryTable();\n  contentInput.value = '';\n}\n\n// Редагування нотатків\nfunction editNote(index, newContent) {\n  if (index < 0 || index >= notesData.length) {\n    return; // Invalid index\n  }\n\n  notesData[index].content = newContent;\n  notesData[index].datesMentioned = findDatesMentioned(newContent);\n  renderNotesTable();\n}\n\n// Видалення нотатків\nfunction deleteNote(index) {\n  if (index < 0 || index >= notesData.length) {\n    return; // Invalid index\n  }\n\n  notesData.splice(index, 1);\n  renderNotesTable();\n  updateSummaryTable();\n}\n\n// Аврхівування нотатків\nfunction archiveNote(index) {\n  const archivedNote = notesData.splice(index, 1)[0];\n  archivedNote.archived = true;\n  notesData.push(archivedNote);\n  renderNotesTable();\n  updateSummaryTable();\n}\n\nfunction unarchiveNote(index) {\n  const unarchivedNote = notesData.splice(index, 1)[0];\n  unarchivedNote.archived = false;\n  notesData.push(unarchivedNote);\n  renderNotesTable();\n  updateSummaryTable();\n}\n\n// Оновлення таблиці summary\nfunction updateSummaryTable() {\n  const summary = {\n    Task: { active: 0, archived: 0 },\n    'Random Thought': { active: 0, archived: 0 },\n    Idea: { active: 0, archived: 0 },\n  };\n\n  for (const note of notesData) {\n    const category = note.category;\n    if (note.archived) {\n      summary[category].archived++;\n    } else {\n      summary[category].active++;\n    }\n  }\n\n  taskActiveCount.textContent = summary.Task.active;\n  taskArchivedCount.textContent = summary.Task.archived;\n  randomThoughtActiveCount.textContent = summary['Random Thought'].active;\n  randomThoughtArchivedCount.textContent = summary['Random Thought'].archived;\n  ideaActiveCount.textContent = summary.Idea.active;\n  ideaArchivedCount.textContent = summary.Idea.archived;\n}\n\n// Слухачі\naddNoteBtn.addEventListener('click', handleAddNote);\ndocument.addEventListener('click', event => {\n  if (event.target.classList.contains('archiveBtn')) {\n    const index = event.target.dataset.index;\n    archiveNote(index);\n  }\n});\ndocument.addEventListener('click', event => {\n  if (event.target.classList.contains('editBtn')) {\n    const index = event.target.dataset.index;\n    const newContent = prompt('Edit note:', notesData[index].content);\n    if (newContent !== null) {\n      editNote(index, newContent);\n    }\n  } else if (event.target.classList.contains('deleteBtn')) {\n    const index = event.target.dataset.index;\n    if (confirm('Are you sure you want to delete this note?')) {\n      deleteNote(index);\n    }\n  }\n});\ndocument.addEventListener('click', event => {\n  if (event.target.classList.contains('unarchiveBtn')) {\n    const index = event.target.dataset.index;\n    unarchiveNote(index);\n  }\n});\n\nrenderNotesTable();\nupdateSummaryTable();\n"],"names":["$03deec68f6ffa0e6$export$9fcfec4cbf48e2c9","time","Date","content","category","datesMentioned","$b8f9b7833fa37166$var$datePattern","$b8f9b7833fa37166$var$categoryInput","document","getElementById","$b8f9b7833fa37166$var$contentInput","$b8f9b7833fa37166$var$addNoteBtn","$b8f9b7833fa37166$var$notesTableBody","querySelector","$b8f9b7833fa37166$var$taskActiveCount","$b8f9b7833fa37166$var$taskArchivedCount","$b8f9b7833fa37166$var$randomThoughtActiveCount","$b8f9b7833fa37166$var$randomThoughtArchivedCount","$b8f9b7833fa37166$var$ideaActiveCount","$b8f9b7833fa37166$var$ideaArchivedCount","$b8f9b7833fa37166$var$findDatesMentioned","match","$b8f9b7833fa37166$var$renderNotesTable","innerHTML","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","note","value","tr","createElement","concat","toLocaleString","join","archived","indexOf","appendChild","err","return","$b8f9b7833fa37166$var$updateSummaryTable","summary","Task","active","Idea","textContent","addEventListener","trim","newNote","push","alert","event","target","classList","contains","index","archivedNote","splice","$b8f9b7833fa37166$var$archiveNote","dataset","newContent","prompt","length","$b8f9b7833fa37166$var$editNote","index1","confirm","$b8f9b7833fa37166$var$deleteNote","unarchivedNote","$b8f9b7833fa37166$var$unarchiveNote"],"version":3,"file":"index.4821c5ca.js.map"}